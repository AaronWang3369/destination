<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzq.accounting.dao.AccountingMapper" >
  <resultMap id="BaseResultMap" type="com.hzq.accounting.entity.Accounting" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="voucher_no" property="voucherNo" jdbcType="VARCHAR" />
    <result column="profit" property="profit" jdbcType="DECIMAL" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="bank_change_amount" property="bankChangeAmount" jdbcType="DECIMAL" />
    <result column="receiver_account_no" property="receiverAccountNo" jdbcType="VARCHAR" />
    <result column="bank_order_no" property="bankOrderNo" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, voucher_no, profit, income, cost, remark, bank_change_amount, receiver_account_no, 
    bank_order_no, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accounting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from accounting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hzq.accounting.entity.Accounting" >
    insert into accounting (id, voucher_no, profit, 
      income, cost, remark, 
      bank_change_amount, receiver_account_no, bank_order_no, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{voucherNo,jdbcType=VARCHAR}, #{profit,jdbcType=DECIMAL}, 
      #{income,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{bankChangeAmount,jdbcType=DECIMAL}, #{receiverAccountNo,jdbcType=VARCHAR}, #{bankOrderNo,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hzq.accounting.entity.Accounting" >
    insert into accounting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="voucherNo != null" >
        voucher_no,
      </if>
      <if test="profit != null" >
        profit,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="bankChangeAmount != null" >
        bank_change_amount,
      </if>
      <if test="receiverAccountNo != null" >
        receiver_account_no,
      </if>
      <if test="bankOrderNo != null" >
        bank_order_no,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="voucherNo != null" >
        #{voucherNo,jdbcType=VARCHAR},
      </if>
      <if test="profit != null" >
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankChangeAmount != null" >
        #{bankChangeAmount,jdbcType=DECIMAL},
      </if>
      <if test="receiverAccountNo != null" >
        #{receiverAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankOrderNo != null" >
        #{bankOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzq.accounting.entity.Accounting" >
    update accounting
    <set >
      <if test="voucherNo != null" >
        voucher_no = #{voucherNo,jdbcType=VARCHAR},
      </if>
      <if test="profit != null" >
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankChangeAmount != null" >
        bank_change_amount = #{bankChangeAmount,jdbcType=DECIMAL},
      </if>
      <if test="receiverAccountNo != null" >
        receiver_account_no = #{receiverAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankOrderNo != null" >
        bank_order_no = #{bankOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzq.accounting.entity.Accounting" >
    update accounting
    set voucher_no = #{voucherNo,jdbcType=VARCHAR},
      profit = #{profit,jdbcType=DECIMAL},
      income = #{income,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      bank_change_amount = #{bankChangeAmount,jdbcType=DECIMAL},
      receiver_account_no = #{receiverAccountNo,jdbcType=VARCHAR},
      bank_order_no = #{bankOrderNo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>